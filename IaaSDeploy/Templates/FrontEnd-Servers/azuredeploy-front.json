{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "webCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of Web VMs to be deployed to the Front subnet."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "TestVNet",
      "metadata": {
        "description": "Name for the new VNet."
      }
    },
    "stdStorageName": {
      "type": "string",
      "defaultValue": "rkvnetstrgstd",
      "metadata": {
        "description": "Name for simple storage account."
      }
    },
    "frontEndSubnetName": {
      "type": "string",
      "defaultValue": "FrontEnd",
      "metadata": {
        "description": "Name for the front end subnet."
      }
    },
    "frontEndNSGName": {
      "type": "string",
      "defaultValue": "NSG-FrontEnd",
      "metadata": {
        "description": "Name for the NSG used to allow RDP, HTTP and HTPPS"
      }
    },
    "backEndSubnetName": {
      "type": "string",
      "defaultValue": "BackEnd",
      "metadata": {
        "description": "Name for the front end subnet."
      }
    },
    "backEndNSGName": {
      "type": "string",
      "defaultValue": "NSG-BackEnd",
      "metadata": {
        "description": "Name for the NSG used to allow RDP, HTTP and HTPPS"
      }
    },
    "skuName": {
      "type": "string",
      "allowedValues": [
        "Standard_Small",
        "Standard_Medium",
        "Standard_Large"
      ],
      "defaultValue": "Standard_Medium",
      "metadata": {
        "description": "Sku Name"
      }
    },
    "capacity": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of instances"
      }
    },
    "certData": {
      "type": "string",
      "metadata": {
        "description": "Base-64 encoded form of the .pfx file"
      }
    },
    "certPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for .pfx certificate"
      }
    },
    "domainToJoin": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "domainUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the account on the domain"
      }
    },
    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain"
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com'"
      }
    },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "modulesUrl": {
      "type": "string",
      "metadata": {
        "description": "URL for the DSC configuration module. NOTE: Can be a Github url(raw) to the zip file"
      }
    },
    "configurationFunction": {
      "type": "string",
      "defaultValue": "IISSetup.ps1\\IISWebsite",
      "metadata": {
        "description": "DSC configuration function to call"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "apiVersion": "2015-06-15",
    "webVMSettings": {
      "vmSize": "Standard_D1",
      "adminUsername": "adminuser",
      "adminPassword": "adminP@ssw0rd",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "2012-R2-Datacenter",
      "version": "latest",
      "vmName": "WEB",
      "osdisk": "osdiskweb",
      "nicName": "NICWEB",
      "avsetName": "ASWEB"
    },
    "vmStorageAccountContainerName": "vhds",
    "loadPip": "[concat(variables('lbname'), '-publicip')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
    "frontEndSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('frontEndSubnetName'))]",
    "backEndSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('backEndSubnetName'))]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('loadPip'))]",
    "lbname": "kno2lbtest",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbname'))]",
    "lbSettings": {
      "lbPublicIPAddressType": "Static",
      "lbVIPPort": 80,
      "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
      "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
      "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
      "lbWorkPoolID": "[concat(variables('lbID'),'/backendAddressPools/WorkPool')]",
      "lbWorkProbeID": "[concat(variables('lbID'),'/probes/wrkProbe')]",
      "lbWorkVIPPort": 50001
    }
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[variables('location')]",
      "name": "[variables('loadPip')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('lbSettings').lbPublicIPAddressType]"
      },
      "tags": {
        "displayName": "PublicIPAddresses - LB"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "NetworkInterfaces - Web"
      },
      "name": "[concat(variables('webVMSettings').nicName, copyindex(1))]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "properties": {
        "dnsSettings": {
          "dnsServers": [ "10.10.15.250", "8.8.8.8" ]
        },
        "networkSecurityGroup": { "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('frontEndNSGName'))]" },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('frontEndSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      },
      "copy": {
        "name": "webniccount",
        "count": "[parameters('webCount')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('webVMSettings').avsetName]",
      "location": "[variables('location')]",
      "dependsOn": [ ],
      "tags": {
        "displayName": "AvailabilitySet - Web"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('webVMSettings').vmName,copyindex(1))]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[variables('location')]",
      "copy": {
        "name": "webvmcount",
        "count": "[parameters('webCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('webVMSettings').nicName, copyindex(1))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('webVMSettings').avsetName)]"
      ],
      "tags": {
        "displayName": "VMs - Web"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('webVMSettings').avsetName)]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('webVMSettings').vmSize]"
        },
        "osProfile": {
          "computerName": "[concat(variables('webVMSettings').vmName,copyindex(1))]",
          "adminUsername": "[variables('webVMSettings').adminUsername]",
          "adminPassword": "[variables('webVMSettings').adminPassword]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('webVMSettings').publisher]",
            "offer": "[variables('webVMSettings').offer]",
            "sku": "[variables('webVMSettings').sku]",
            "version": "[variables('webVMSettings').version]"
          },
          "osDisk": {
            "name": "[concat(variables('webVMSettings').osdisk,copyindex(1))]",
            "vhd": {
              "uri": "[concat('http://', parameters('stdStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('webVMSettings').osdisk, copyindex(1),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('webVMSettings').nicName,copyindex(1)))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('lbname')]",
      "tags": { "displayName": "Load Balancer" },
      "type": "Microsoft.Network/loadBalancers",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('loadPip'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('loadPip'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          },
          {
            "name": "WorkPool"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbSettings').frontEndIPConfigID]"
              },
              "backendAddressPool": {
                "id": "[variables('lbSettings').lbPoolID]"
              },
              "protocol": "tcp",
              "frontendPort": "[variables('lbSettings').lbVIPPort]",
              "backendPort": "[variables('lbSettings').lbVIPPort]",
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbSettings').lbProbeID]"
              }
            }
          },
          {
            "name": "WorkRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbSettings').frontEndIPConfigID]"
              },
              "backendAddressPool": {
                "id": "[variables('lbSettings').lbWorkPoolID]"
              },
              "protocol": "tcp",
              "frontendPort": "[variables('lbSettings').lbWorkVIPPort]",
              "backendPort": "[variables('lbSettings').lbWorkVIPPort]",
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbSettings').lbWorkProbeID]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "wrkProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": "60",
              "numberOfProbes": "5"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('webVMSettings').vmName,copyindex(1),'/joindomain')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(variables('webVMSettings').vmName,copyindex(1)))]"
      ],
      "tags": {
        "displayName": "JoinDomain"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.0",
        "settings": {
          "Name": "[parameters('domainToJoin')]",
          "OUPath": "",
          "User": "[parameters('domainUsername')]",
          "Restart": "true",
          "Options": "3"
        },
        "protectedsettings": {
          "Password": "[parameters('domainPassword')]"
        }
      },
      "copy": {
        "name": "webvmcount",
        "count": "[parameters('webCount')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('webVMSettings').vmName,copyindex(1),'/setupiis')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('webVMSettings').vmName,copyindex(1))]"
      ],
      "tags": {"displayName": "Setup IIS"},
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.8",
        "settings": {
          "ModulesUrl": "[parameters('modulesUrl')]",
          "ConfigurationFunction": "[parameters('configurationFunction')]",
          "Properties": {
            "MachineName": "[concat(variables('webVMSettings').vmName,copyindex(1))]"
          }
        },
        "protectedSettings": null
      },
      "copy": {
        "name": "webvmcount",
        "count": "[parameters('webCount')]"
      }
    }

  ],
  "outputs": {
    "nicname1": {
      "value": "[concat('Microsoft.Network/networkInterfaces/', variables('webVMSettings').nicName, 1)]",
      "type": "string"
    },
    "nicname2": {
      "value": "[concat('Microsoft.Network/networkInterfaces/', variables('webVMSettings').nicName, 2)]",
      "type": "string"
    }
  }
}
