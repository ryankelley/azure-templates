{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "webCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of Web VMs to be deployed to the Front subnet."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "TestVNet",
      "metadata": {
        "description": "Name for the new VNet."
      }
    },
    "stdStorageName": {
      "type": "string",
      "defaultValue": "rkvnetstrgstd",
      "metadata": {
        "description": "Name for simple storage account."
      }
    },
    "frontEndSubnetName": {
      "type": "string",
      "defaultValue": "FrontEnd",
      "metadata": {
        "description": "Name for the front end subnet."
      }
    },
    "frontEndNSGName": {
      "type": "string",
      "defaultValue": "NSG-FrontEnd",
      "metadata": {
        "description": "Name for the NSG used to allow RDP, HTTP and HTPPS"
      }
    },
    "backEndSubnetName": {
      "type": "string",
      "defaultValue": "BackEnd",
      "metadata": {
        "description": "Name for the front end subnet."
      }
    },
    "backEndNSGName": {
      "type": "string",
      "defaultValue": "NSG-BackEnd",
      "metadata": {
        "description": "Name for the NSG used to allow RDP, HTTP and HTPPS"
      }
    },
    "skuName": {
            "type": "string",
            "allowedValues": [
                "Standard_Small",
                "Standard_Medium",
                "Standard_Large"
            ],
            "defaultValue": "Standard_Medium",
            "metadata": {
                "description": "Sku Name"
            }
        },
        "capacity": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of instances"
            }
        },
        "certData": {
            "type": "string",
            "metadata": {
                "description": "Base-64 encoded form of the .pfx file"
            }
        },
        "certPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for .pfx certificate"
            }
        }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "webVMSettings": {
      "vmSize": "Standard_D1",
      "adminUsername": "adminuser",
      "adminPassword": "adminP@ssw0rd",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "2012-R2-Datacenter",
      "version": "latest",
      "vmName": "WEB",
      "osdisk": "osdiskweb",
      "nicName": "NICWEB",
      "pipName": "PIPWEB",
      "avsetName": "ASWEB"
    },
    "vmStorageAccountContainerName": "vhds",
    "gatewayPip": "gatePIP",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
    "frontEndSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('frontEndSubnetName'))]",
    "backEndSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('backEndSubnetName'))]",
    "applicationGatewayName": "agfront",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',variables('applicationGatewayName'))]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gatewayPip'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[variables('location')]",
      "name": "[concat(variables('webVMSettings').pipName, copyindex(1))]",
      "properties": {
        "publicIPAllocationMethod": "dynamic"
      },
      "tags": {
        "displayName": "PublicIPAddresses - Web"
      },
      "copy": {
        "name": "webpipcount",
        "count": "[parameters('webCount')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[variables('location')]",
      "name": "[variables('gatewayPip')]",
      "properties": {
        "publicIPAllocationMethod": "dynamic"
      },
      "tags": {
        "displayName": "PublicIPAddresses - Gateway"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "NetworkInterfaces - Web"
      },
      "name": "[concat(variables('webVMSettings').nicName, copyindex(1))]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('webVMSettings').pipName, copyindex(1))]"
      ],
      "properties": {
        "networkSecurityGroup": {"id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('frontEndNSGName'))]"},
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('webVMSettings').pipName, copyindex(1)))]"
              },
              "subnet": {
                "id": "[variables('frontEndSubnetRef')]"
              }

            }
          }
        ]
      },
      "copy": {
        "name": "webniccount",
        "count": "[parameters('webCount')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('webVMSettings').avsetName]",
      "location": "[variables('location')]",
      "dependsOn": [ ],
      "tags": {
        "displayName": "AvailabilitySet - Web"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('webVMSettings').vmName, 1)]",
        "[resourceId('Microsoft.Network/publicIPAddresses',variables('gatewayPip'))]"
      ],
      "tags": {
        "displayName": "Application Gateway - Web"
      },
      "properties": {
        "sku": {
          "name": "[parameters('skuName')]",
          "tier": "Standard",
          "capacity": "[parameters('capacity')]"
        },
        "sslCertificates": [
          {
            "name": "appGatewaySslCert",
            "properties": {
              "data": "[parameters('certData')]",
              "password": "[parameters('certPassword')]"
            }
          }
        ],
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('backEndSubnetRef')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('publicIPRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort",
            "properties": {
              "Port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "BackendAddresses": [
                {
                  "IpAddress": "104.42.121.167"
                },
                {
                  "IpAddress": "104.42.125.224"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
              },
              "Protocol": "Https",
              "SslCertificate": {
                "Id": "[concat(variables('applicationGatewayID'), '/sslCertificates/appGatewaySslCert')]"
              }
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "rule1",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('webVMSettings').vmName,copyindex(1))]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[variables('location')]",
      "copy": {
        "name": "webvmcount",
        "count": "[parameters('webCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('webVMSettings').nicName, copyindex(1))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('webVMSettings').avsetName)]"
      ],
      "tags": {
        "displayName": "VMs - Web"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('webVMSettings').avsetName)]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('webVMSettings').vmSize]"
        },
        "osProfile": {
          "computerName": "[concat(variables('webVMSettings').vmName,copyindex(1))]",
          "adminUsername": "[variables('webVMSettings').adminUsername]",
          "adminPassword": "[variables('webVMSettings').adminPassword]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('webVMSettings').publisher]",
            "offer": "[variables('webVMSettings').offer]",
            "sku": "[variables('webVMSettings').sku]",
            "version": "[variables('webVMSettings').version]"
          },
          "osDisk": {
            "name": "[concat(variables('webVMSettings').osdisk,copyindex(1))]",
            "vhd": {
              "uri": "[concat('http://', parameters('stdStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('webVMSettings').osdisk, copyindex(1),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('webVMSettings').nicName,copyindex(1)))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
  }
}
